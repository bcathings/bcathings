[["index.html", "BCA Notes if you are desperate. 1 BCA NOTES", " BCA Notes if you are desperate. written by @bcathings 1 BCA NOTES Just notes for BCA following the MGU syllabus. Now, what i wrote up is completely on you and i dont care if they are wrong i am not responsible for anything said in this book. open a pull request on github if you want it corrected. now, there is still stuff missing and stuff they didnt teach me for some reason, if anything, Im trying to finish this. maybe, but feel free to open up issues on github. they didnt give you notes for math? some equations? they probably dont know \\(\\LaTeX\\) here ya go, the notes. stop depending on people who dont care about you. even me. "],["semester-one-math.html", "2 SEMESTER ONE : math", " 2 SEMESTER ONE : math well these are the math notes. for sem one. here we go. oh. there isn’t any. yet. "],["semester-three-data-structure.html", "3 SEMESTER THREE : Data Structure 3.1 Polynomials", " 3 SEMESTER THREE : Data Structure 3.1 Polynomials 3.1.1 Algorithm to add two Polynomials. create a sum array sum[] for size to maximum of m and n copy A[] to sum[]. Traverse array B[] and do following for every element B[i] sum[i] = sum[i] + B[i] Return sum[]. 3.1.2 Algorithm to add two Polynomials. multiply(A[0..m-1],B[0..n-1]) create a product array prod[] of size m+n-1 initalize all entries in prod[] as 0. Traverse array A[] and do follow for every element A[i] Traverse array B[] and do following for every element B[j] prod[i+j] = prod[i+j] + A[i] * B[j] Return prod[]. "],["semester-three-graphics..html", "4 SEMESTER THREE : Graphics. 4.1 MODULE 2 4.2 Drawing algorithms 4.3 Output primitives 4.4 graphics functions. ( kinda idk ) 4.5 Line Drawing algorithms.", " 4 SEMESTER THREE : Graphics. 4.1 MODULE 2 4.2 Drawing algorithms Line drawing algorithms DDA algorithm Breshnham’’s Line Algorithm. Circle drawing algorithm. Midpoint circle algorithm Character generation 4.3 Output primitives Graphics programming packages provide functions to describe a scene in terms of these basic geometric structures Output primitives. To create complex pictures we use sets of output primitives. Basic building blocks of a picture are called Output primitives. Point Line Circle 4.4 graphics functions. ( kinda idk ) To load a specified color into the frame buffer, the function used is setPixel(x,y) To retrive a specified color from the frame buffer, the function used is getPixel(x,y) 4.5 Line Drawing algorithms. The slope intercept equation for a straight line is \\[\\begin{equation} y = mx + b \\tag{4.1} \\end{equation}\\] with \\(m\\) representing the slope of the lien and b as the \\(y\\) intercept. give that the two endpoints of a line segment are specified, \\((x_{1}, y_{1} ) , (x_{2}, y_{2} )\\) posiitions the values for the slope \\(m\\) and \\(y\\) intercept b can be determined with the following calculations. \\[\\begin{equation} m = \\frac{y_{2} - y_{1}}{x_{2}-x_{1}} \\tag{4.2} \\end{equation}\\] \\[\\begin{equation} b = y_{1} - m . x_{1} \\tag{4.3} \\end{equation}\\] algorithms for displaying straight lines are based on line equations (4.1) and the calculations given in (4.2) and (4.3) for any given \\(x\\) interval \\(\\Delta x\\) along a line the corresponding \\(y\\) interval \\(\\Delta y\\) can be calculated from equation (4.2) as \\[\\begin{equation} \\Delta y = m \\Delta x \\tag{4.4} \\end{equation}\\] Similarly, \\(x\\) interval \\(\\Delta x\\) can be obtained as \\[\\begin{equation} \\Delta x = \\frac{\\Delta y}{x} \\tag{4.5} \\end{equation}\\] the above equations form the basis determining defelection volatages in analog devices 4 lines with slope magnitudes \\(| m | &lt; 1, \\Delta x\\) can be set proportional to small horizontal defelection voltage and the corresponding vertical defelection voltage is then set proportional to \\(\\Delta y\\) as calculated from equation no (4.4) for lines with slope magnitude \\(|m|&gt;1,\\Delta y\\) can be proportional to a small vertical defelection voltage with corresponding horizontal defelection voltage set proportional to \\(\\Delta x\\) as calculated from equation no (4.5) for lines \\(m=1,\\Delta x=\\Delta y\\) the horizontal and vertical defelection volatages are equal. In each case a smooth line with slop \\(m\\) is generatated between the specified points. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
